{
  "address": "6BjVpGR1pGJ41xDJF4mMuvC7vymFBZ8QXxoRKFqsuDDi",
  "metadata": {
    "name": "beam",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Beam - Offline-first P2P payments with escrow on Solana"
  },
  "instructions": [
    {
      "name": "fund_escrow",
      "docs": [
        "Add funds to existing escrow"
      ],
      "discriminator": [
        155,
        18,
        218,
        141,
        182,
        213,
        69,
        201
      ],
      "accounts": [
        {
          "name": "escrow_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "owner"
              }
            ]
          }
        },
        {
          "name": "owner",
          "writable": true,
          "signer": true,
          "relations": [
            "escrow_account"
          ]
        },
        {
          "name": "owner_token_account",
          "writable": true
        },
        {
          "name": "escrow_token_account",
          "writable": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize_escrow",
      "docs": [
        "Initialize escrow account for offline payments"
      ],
      "discriminator": [
        243,
        160,
        77,
        153,
        11,
        92,
        48,
        209
      ],
      "accounts": [
        {
          "name": "escrow_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "owner"
              }
            ]
          }
        },
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "owner_token_account",
          "writable": true
        },
        {
          "name": "escrow_token_account",
          "writable": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "initial_amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize_nonce_registry",
      "docs": [
        "Initialize nonce registry for payer"
      ],
      "discriminator": [
        34,
        149,
        53,
        133,
        236,
        53,
        88,
        85
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "nonce_registry",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  110,
                  111,
                  110,
                  99,
                  101
                ]
              },
              {
                "kind": "account",
                "path": "payer"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "migrate_escrow",
      "docs": [
        "Migrate old escrow account (107 bytes) to new format (127 bytes)",
        "This is a one-time migration for accounts created before fraud fields were added"
      ],
      "discriminator": [
        65,
        111,
        186,
        119,
        58,
        11,
        81,
        209
      ],
      "accounts": [
        {
          "name": "escrow_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "owner"
              }
            ]
          }
        },
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "report_fraudulent_bundle",
      "docs": [
        "Report conflicting bundle evidence to initiate a fraud dispute"
      ],
      "discriminator": [
        42,
        97,
        16,
        195,
        32,
        174,
        213,
        89
      ],
      "accounts": [
        {
          "name": "nonce_registry",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  110,
                  111,
                  110,
                  99,
                  101
                ]
              },
              {
                "kind": "account",
                "path": "payer"
              }
            ]
          }
        },
        {
          "name": "escrow_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "payer"
              }
            ]
          }
        },
        {
          "name": "payer"
        },
        {
          "name": "reporter",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "bundle_id",
          "type": "string"
        },
        {
          "name": "conflicting_hash",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "reason",
          "type": {
            "defined": {
              "name": "FraudReason"
            }
          }
        }
      ]
    },
    {
      "name": "settle_offline_payment",
      "docs": [
        "Settle offline payment (called when either party goes online)"
      ],
      "discriminator": [
        48,
        91,
        112,
        242,
        39,
        5,
        142,
        80
      ],
      "accounts": [
        {
          "name": "escrow_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "payer"
              }
            ]
          }
        },
        {
          "name": "owner",
          "relations": [
            "escrow_account",
            "nonce_registry"
          ]
        },
        {
          "name": "payer",
          "signer": true
        },
        {
          "name": "merchant"
        },
        {
          "name": "escrow_token_account",
          "writable": true
        },
        {
          "name": "merchant_token_account",
          "writable": true
        },
        {
          "name": "nonce_registry",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  110,
                  111,
                  110,
                  99,
                  101
                ]
              },
              {
                "kind": "account",
                "path": "payer"
              }
            ]
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "payer_nonce",
          "type": "u64"
        },
        {
          "name": "bundle_id",
          "type": "string"
        },
        {
          "name": "evidence",
          "type": {
            "defined": {
              "name": "SettlementEvidence"
            }
          }
        }
      ]
    },
    {
      "name": "withdraw_escrow",
      "docs": [
        "Withdraw unused escrow funds"
      ],
      "discriminator": [
        81,
        84,
        226,
        128,
        245,
        47,
        96,
        104
      ],
      "accounts": [
        {
          "name": "escrow_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "owner"
              }
            ]
          }
        },
        {
          "name": "owner",
          "writable": true,
          "signer": true,
          "relations": [
            "escrow_account"
          ]
        },
        {
          "name": "owner_token_account",
          "writable": true
        },
        {
          "name": "escrow_token_account",
          "writable": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "NonceRegistry",
      "discriminator": [
        115,
        114,
        189,
        172,
        239,
        92,
        79,
        240
      ]
    },
    {
      "name": "OfflineEscrowAccount",
      "discriminator": [
        40,
        240,
        18,
        133,
        125,
        191,
        137,
        142
      ]
    }
  ],
  "events": [
    {
      "name": "BundleHistoryRecorded",
      "discriminator": [
        236,
        67,
        228,
        115,
        144,
        136,
        59,
        173
      ]
    },
    {
      "name": "EscrowFunded",
      "discriminator": [
        228,
        243,
        166,
        74,
        22,
        167,
        157,
        244
      ]
    },
    {
      "name": "EscrowInitialized",
      "discriminator": [
        222,
        186,
        157,
        47,
        145,
        142,
        176,
        248
      ]
    },
    {
      "name": "EscrowWithdrawn",
      "discriminator": [
        43,
        206,
        174,
        47,
        105,
        219,
        216,
        239
      ]
    },
    {
      "name": "FraudEvidenceSubmitted",
      "discriminator": [
        227,
        24,
        222,
        208,
        122,
        37,
        231,
        252
      ]
    },
    {
      "name": "FraudPenaltyApplied",
      "discriminator": [
        124,
        139,
        238,
        145,
        246,
        113,
        146,
        253
      ]
    },
    {
      "name": "PaymentSettled",
      "discriminator": [
        158,
        182,
        152,
        76,
        105,
        23,
        232,
        135
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidAmount",
      "msg": "Invalid amount specified"
    },
    {
      "code": 6001,
      "name": "InsufficientFunds",
      "msg": "Insufficient funds in escrow"
    },
    {
      "code": 6002,
      "name": "InvalidNonce",
      "msg": "Invalid nonce (must be > last_nonce)"
    },
    {
      "code": 6003,
      "name": "InvalidEscrowTokenAccount",
      "msg": "Escrow token account owner must be the escrow PDA"
    },
    {
      "code": 6004,
      "name": "InvalidOwner",
      "msg": "Invalid owner"
    },
    {
      "code": 6005,
      "name": "MissingAttestation",
      "msg": "Attestation required"
    },
    {
      "code": 6006,
      "name": "InvalidAttestation",
      "msg": "Invalid attestation provided"
    },
    {
      "code": 6007,
      "name": "InvalidBundleId",
      "msg": "Invalid bundle identifier"
    },
    {
      "code": 6008,
      "name": "DuplicateBundle",
      "msg": "Duplicate bundle detected"
    },
    {
      "code": 6009,
      "name": "InvalidBundleHash",
      "msg": "Invalid bundle hash"
    },
    {
      "code": 6010,
      "name": "BundleHistoryNotFound",
      "msg": "Bundle history not found"
    },
    {
      "code": 6011,
      "name": "FraudHashMatches",
      "msg": "Conflicting hash matches settled bundle"
    },
    {
      "code": 6012,
      "name": "FraudEvidenceExists",
      "msg": "Fraud evidence already exists"
    },
    {
      "code": 6013,
      "name": "Overflow",
      "msg": "Arithmetic overflow"
    },
    {
      "code": 6014,
      "name": "Underflow",
      "msg": "Arithmetic underflow"
    },
    {
      "code": 6015,
      "name": "InsufficientFundsForSlash",
      "msg": "Insufficient funds for slash penalty"
    }
  ],
  "types": [
    {
      "name": "AttestationProof",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "attestation_root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "attestation_nonce",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "attestation_timestamp",
            "type": "i64"
          },
          {
            "name": "verifier_signature",
            "type": {
              "array": [
                "u8",
                64
              ]
            }
          }
        ]
      }
    },
    {
      "name": "BundleHistoryRecorded",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "payer",
            "type": "pubkey"
          },
          {
            "name": "merchant",
            "type": "pubkey"
          },
          {
            "name": "bundle_hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "nonce",
            "type": "u64"
          },
          {
            "name": "settled_at",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BundleRecord",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bundle_hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "merchant",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "settled_at",
            "type": "i64"
          },
          {
            "name": "nonce",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "EscrowFunded",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "new_balance",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "EscrowInitialized",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "initial_balance",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "EscrowWithdrawn",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "remaining_balance",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "FraudEvidenceSubmitted",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "payer",
            "type": "pubkey"
          },
          {
            "name": "reporter",
            "type": "pubkey"
          },
          {
            "name": "bundle_hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "conflicting_hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "reason",
            "type": {
              "defined": {
                "name": "FraudReason"
              }
            }
          },
          {
            "name": "reported_at",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "FraudPenaltyApplied",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "payer",
            "type": "pubkey"
          },
          {
            "name": "slashed_amount",
            "type": "u64"
          },
          {
            "name": "new_reputation",
            "type": "u16"
          },
          {
            "name": "fraud_count",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "FraudReason",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "DuplicateBundle"
          },
          {
            "name": "InvalidAttestation"
          },
          {
            "name": "Other"
          }
        ]
      }
    },
    {
      "name": "FraudRecord",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bundle_hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "conflicting_hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "reporter",
            "type": "pubkey"
          },
          {
            "name": "reported_at",
            "type": "i64"
          },
          {
            "name": "reason",
            "type": {
              "defined": {
                "name": "FraudReason"
              }
            }
          }
        ]
      }
    },
    {
      "name": "NonceRegistry",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "last_nonce",
            "type": "u64"
          },
          {
            "name": "recent_bundle_hashes",
            "type": {
              "vec": {
                "array": [
                  "u8",
                  32
                ]
              }
            }
          },
          {
            "name": "bundle_history",
            "type": {
              "vec": {
                "defined": {
                  "name": "BundleRecord"
                }
              }
            }
          },
          {
            "name": "fraud_records",
            "type": {
              "vec": {
                "defined": {
                  "name": "FraudRecord"
                }
              }
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "OfflineEscrowAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "escrow_token_account",
            "type": "pubkey"
          },
          {
            "name": "escrow_balance",
            "type": "u64"
          },
          {
            "name": "last_nonce",
            "type": "u64"
          },
          {
            "name": "reputation_score",
            "type": "u16"
          },
          {
            "name": "total_spent",
            "type": "u64"
          },
          {
            "name": "created_at",
            "type": "i64"
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "stake_locked",
            "type": "u64"
          },
          {
            "name": "fraud_count",
            "type": "u32"
          },
          {
            "name": "last_fraud_timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "PaymentSettled",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "payer",
            "type": "pubkey"
          },
          {
            "name": "merchant",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "nonce",
            "type": "u64"
          },
          {
            "name": "bundle_id",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "SettlementEvidence",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "payer_proof",
            "type": {
              "option": {
                "defined": {
                  "name": "AttestationProof"
                }
              }
            }
          },
          {
            "name": "merchant_proof",
            "type": {
              "option": {
                "defined": {
                  "name": "AttestationProof"
                }
              }
            }
          }
        ]
      }
    }
  ]
}